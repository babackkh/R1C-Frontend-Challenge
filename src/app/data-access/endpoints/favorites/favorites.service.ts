/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * RealWorld Conduit API
 * Conduit API documentation
 * OpenAPI spec version: 1.0.0
 */
import { HttpClient } from "@angular/common/http";
import type { HttpResponse as AngularHttpResponse, HttpContext, HttpEvent, HttpHeaders, HttpParams } from "@angular/common/http";

import { Injectable } from "@angular/core";

import type { Observable } from "rxjs";

import type { SingleArticleResponseResponse } from "../../model";

type HttpClientOptions = {
	headers?:
		| HttpHeaders
		| {
				[header: string]: string | string[];
		  };
	context?: HttpContext;
	observe?: any;
	params?:
		| HttpParams
		| {
				[param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
		  };
	reportProgress?: boolean;
	responseType?: any;
	withCredentials?: boolean;
};

@Injectable({ providedIn: "root" })
export class FavoritesService {
	constructor(private http: HttpClient) {} /**
	 * Favorite an article. Auth is required
	 * @summary Favorite an article
	 */
	createArticleFavorite<TData = SingleArticleResponseResponse>(
		slug: string,
		options?: Omit<HttpClientOptions, "observe"> & { observe?: "body" },
	): Observable<TData>;
	createArticleFavorite<TData = SingleArticleResponseResponse>(
		slug: string,
		options?: Omit<HttpClientOptions, "observe"> & { observe?: "response" },
	): Observable<AngularHttpResponse<TData>>;
	createArticleFavorite<TData = SingleArticleResponseResponse>(
		slug: string,
		options?: Omit<HttpClientOptions, "observe"> & { observe?: "events" },
	): Observable<HttpEvent<TData>>;
	createArticleFavorite<TData = SingleArticleResponseResponse>(slug: string, options?: HttpClientOptions): Observable<TData> {
		return this.http.post<TData>(`/articles/${slug}/favorite`, undefined, options);
	}
	/**
	 * Unfavorite an article. Auth is required
	 * @summary Unfavorite an article
	 */
	deleteArticleFavorite<TData = SingleArticleResponseResponse>(
		slug: string,
		options?: Omit<HttpClientOptions, "observe"> & { observe?: "body" },
	): Observable<TData>;
	deleteArticleFavorite<TData = SingleArticleResponseResponse>(
		slug: string,
		options?: Omit<HttpClientOptions, "observe"> & { observe?: "response" },
	): Observable<AngularHttpResponse<TData>>;
	deleteArticleFavorite<TData = SingleArticleResponseResponse>(
		slug: string,
		options?: Omit<HttpClientOptions, "observe"> & { observe?: "events" },
	): Observable<HttpEvent<TData>>;
	deleteArticleFavorite<TData = SingleArticleResponseResponse>(slug: string, options?: HttpClientOptions): Observable<TData> {
		return this.http.delete<TData>(`/articles/${slug}/favorite`, options);
	}
}

export type CreateArticleFavoriteClientResult = NonNullable<SingleArticleResponseResponse>;
export type DeleteArticleFavoriteClientResult = NonNullable<SingleArticleResponseResponse>;
